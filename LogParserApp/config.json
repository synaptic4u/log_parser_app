{
    "IMPORTANT_NOTE_alias" : "alias must be one word, no hyphens or spaces. Accepted values: tree or tree_log",
    "IMPORTANT_NOTE for Parser::parseLine() method" : "Some of the logs are so custom, I couldn't catch everything with generic program logic without doing extensive checking in the parsing.",
    "IMPORTANT_NOTE_database_primary_key" : "A auto_increment primary key is automatically named logid (int) auto_increment primary key",
    "IMPORTANT_NOTE_columns_date_variables" : "columns: date variable for database table must be named: loggedon.",
    "log_include" : {
        "auth" : {
            "alias" : "auth",
            "directory" :"/var/log",
            "name" : "auth.log",
            "columns" : ["loggedon", "server", "session", "user", "command_action"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "alternatives" : {
            "alias" : "alternatives",
            "directory" :"/var/log",
            "name" : "alternatives.log",
            "columns" : ["update_alternatives", "loggedon", "log"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "daemon" : {
            "alias" : "daemon",
            "directory" :"/var/log",
            "name" : "daemon.log",
            "columns" : ["loggedon", "server", "application", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "debug" : {
            "alias" : "debug",
            "directory" :"/var/log",
            "name" : "debug",
            "columns" : ["loggedon", "server", "application", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : "Gets a false positive for apache modsec_debug.log then breaks. Will still need to programmatically fix it."
        },
        "dpkg" : {
            "alias" : "dpkg",
            "directory" :"/var/log",
            "name" : "dpkg.log",
            "columns" : ["loggedon", "process", "log"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "fail2ban" : {
            "alias" : "fail2ban",
            "directory" :"/var/log",
            "name" : "fail2ban.log",
            "columns" : ["loggedon", "process", "id", "type", "log"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss,m-3",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : "Some files have the emails logged to them so it messes everything up! Occaisonal occurence, I just deleted the few offenders manually in the file."
        },
        "kern" : {
            "alias" : "kern",
            "directory" :"/var/log",
            "name" : "kern.log",
            "columns" : ["loggedon", "server", "process", "id", "application", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "mail_info" : {
            "alias" : "mail_info",
            "directory" :"/var/log",
            "name" : "mail.info",
            "columns" : ["loggedon", "server", "process", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "mail_log" : {
            "alias" : "mail_log",
            "directory" :"/var/log",
            "name" : "mail.log",
            "columns" : ["loggedon", "server", "process", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "mail_warn" : {
            "alias" : "mail_warn",
            "directory" :"/var/log",
            "name" : "mail.warn",
            "columns" : ["loggedon", "server", "process", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "messages" : {
            "alias" : "messages",
            "directory" :"/var/log",
            "name" : "messages",
            "columns" : ["loggedon", "server", "process", "id", "application", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "syslog" : {
            "alias" : "syslog",
            "directory" :"/var/log",
            "name" : "syslog",
            "columns" : ["loggedon", "server", "process", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "ufw" : {
            "alias" : "ufw",
            "directory" :"/var/log",
            "name" : "ufw.log",
            "columns" : ["loggedon", "server", "process", "id", "ufw", "in", "out", "mac", "src", "dst", "len", "tos", "prec", "ttl", "id2", "prot", "spt", "dpt", "window", "res", "syn", "urgp", "hoplimit", "flowlbl"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : "Fields are not in a unified order, need to match!"
        },
        "user" : {
            "alias" : "user",
            "directory" :"/var/log",
            "name" : "user.log",
            "columns" : ["loggedon", "server", "process", "log"],
            "loggedon_format" : "MMM DD HH:mm:ss",
            "field_encapsulated" : "",
            "field_delimiter" : "space",
            "quirk" : ""
        },
        "daemon_access" : {
            "alias" : "daemon_access",
            "directory" :"/var/log/apache2",
            "name" : "daemon-access.log",
            "columns" : ["ip", "logname", "country_code", "loggedon", "method_params", "http_response", "calculated_bytes", "referer", "user_agent", "content_type", "client_port", "canonical_host_name", "server_IP", "server_port", "handler", "forward_requests", "tcp_connection", "cookie", "unique_id", "SSL_PROTOCOL", "SSL_CIPHER", "in_bytes_tot", "out_bytes_tot", "compression_ratio", "duration_micro_sec", "modsec_time_in", "app_time", "modsec_time_out", "modsec_anomaly_in_pls", "modsec_anomaly_out_pls", "modsec_anomaly_in", "modsec_anomaly_out"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss.m-6",
            "field_encapsulated" : "double quotes",
            "field_delimiter" : "space",
            "quirk" : "The column: method_params was changed in the program to a text field in the DB, MySQL was truncating the column. This is my apache virtualhost log. Variations of different date formats in logs: DD/MMM/YYYY:HH:mm:ss +d-4 || YYYY-MM-DD HH:mm:ss.m-6"
        },
        "daemon_error" : {
            "alias" : "daemon_error",
            "directory" :"/var/log/apache2",
            "name" : "daemon-error.log",
            "columns" : ["loggedon", "error", "client_ip", "unique_id", "log"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss.m-6",
            "field_encapsulated" : "brackets or double quotes",
            "field_delimiter" : "space",
            "quirk" : "Unique_id & client_ip_port could be anywhere, we'll just search for those values after error column. Date formatted as either: [Day MMM DD HH:mm:ss.m-6 YYYY] || [Day MMM DD HH:mm:ss.m-6 YYYY]" 
        },
        "daemon_perf" : {
            "alias" : "daemon_perf",
            "directory" :"/var/log/apache2",
            "name" : "daemon-perf.log",
            "columns" : ["loggedon", "unique_id", "duration_microsec", "PerfModSecInbound", "PerfAppl", "PerfModSecOutbound", "TS_Phase1", "TS_Phase2", "TS_Phase3", "TS_Phase4", "TS_Phase5", "Perf_Phase1", "Perf_Phase2", "Perf_Phase3", "Perf_Phase4", "Perf_Phase5", "Perf_ReadingStorage", "Perf_WritingStorage", "Perf_GarbageCollection", "Perf_ModSecLogging", "Perf_ModSecCombined"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss.m-6",
            "field_encapsulated" : "brackets sometimes",
            "field_delimiter" : "space",
            "quirk" : "after PerfModSecInbound every second field is part of the previous so I join those two fields together when parsing. Fields can be encapsulated with brackets sometimes - do my best to parse them out"
        },
        "modsec_perf" : {
            "alias" : "modsec_perf",
            "directory" :"/var/log/apache2",
            "name" : "modsec-perf.log",
            "columns" : ["loggedon", "unique_id", "duration_microsec", "PerfModSecInbound", "PerfAppl", "PerfModSecOutbound", "TS_Phase1", "TS_Phase2", "TS_Phase3", "TS_Phase4", "TS_Phase5", "Perf_Phase1", "Perf_Phase2", "Perf_Phase3", "Perf_Phase4", "Perf_Phase5", "Perf_ReadingStorage", "Perf_WritingStorage", "Perf_GarbageCollection", "Perf_ModSecLogging", "Perf_ModSecCombined"],
            "loggedon_format" : "YYYY-MM-DD HH:mm:ss.m-6",
            "field_encapsulated" : "brackets",
            "field_delimiter" : "space",
            "quirk" : "after PerfModSecInbound every second field is part of the previous so I join those two fields together when parsing. Fields can be encapsulated with brackets sometimes - do my best to parse them out"
        },
        "modsec_audit" : {
            "alias" : "modsec_audit",
            "directory" :"/var/log/apache2",
            "name" : "modsec_audit.log",
            "columns" : ["modsecurity", "client_ip", "domain_ip", "https_response", "audit_file", "log"],
            "loggedon_format" : "null",
            "field_encapsulated" : "brackets",
            "field_delimiter" : "space",
            "quirk" : ""
        }

    },
    "log_exclude" : ["btmp","wtmp", "cloud-init-output.log", "faillog", "lastlog", "lynis.log", "lynis-report.dat", "access.log",  "other_vhostsaccess.log", "www-data-global", "www-data-global.dir", "www-data-global.pag", "www-data-ip", "www-data-ip.dir", "www-data-ip.pag", "pacct", "sa", "sar"],
    "log_dump" : [],
    "file_exclude_types" : [".zip", ".tar", ".gz", ".xz"]
}